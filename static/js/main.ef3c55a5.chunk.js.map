{"version":3,"sources":["styles/index.js","App.js","index.js"],"names":["createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","theme","rootBox","display","flexDirection","alignItems","minHeight","backgroundColor","container","position","flex","width","margin","opacity","table","minWidth","paperBox","left","top","background","borderRadius","overflowX","progressBar","cursor","height","porgressArea","bottom","right","progressNow","songs","author","name","length","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","songIndex","setStateIndex","_useState5","_useState6","completed","setCompleted","_useState7","_useState8","_useState9","_useState10","isPlay","setIsPlay","_useState11","_useState12","isRandom","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","isMute","setIsMute","audioRef","useRef","progressRef","classes","clickNext","useCallback","add","Math","floor","random","newIndex","useEffect","current","ontimeupdate","currentTime","toFixed","_audioRef$current","duration","preState","_songs$songIndex","react_default","a","createElement","Box","className","CssBaseline","Container","Table","TableHead","TableRow","TableCell","align","TableBody","map","items","index","key","component","scope","Hearing_default","color","fontSize","ButtonBase","onClick","Typography","variant","playerBar","coverDiv","style","src","concat","alt","tools","IconButton","aria-label","SkipPrevious_default","Fab","pause","play","Pause_default","PlayArrow_default","SkipNext_default","VolumeOff_default","VolumeUp_default","autoPlay","ref","muted","event","ReactDOM","render","ThemeProvider","src_App","document","getElementById"],"mappings":"8MAGeA,cAAe,CAC1BC,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAI,uQCgCVE,SAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,QAAS,CACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAW,QACXC,gBAAiB,sBAEnBC,UAAW,CACTC,SAAU,WACVN,QAAS,OACTO,KAAM,EACNN,cAAe,SACfO,MAAO,MACPC,OAAQ,OACRL,gBAAiB,0BACjBM,QAAS,IAEXC,MAAO,CACLC,SAAU,KAEZC,SAAU,CACRP,SAAU,WACVN,QAAS,OACTO,KAAM,EACNO,KAAM,EACNC,IAAK,EACLd,cAAe,SACfe,WAAY,OACZC,aAAc,EACdC,UAAW,QAEbC,YAAa,CACXC,OAAQ,UACRZ,MAAO,OACPF,SAAU,WACVe,OAAQ,IAEVC,aAAc,CACZhB,SAAU,WACViB,OAAQ,EACRT,KAAM,EACNU,MAAO,GAETC,YAAa,CACXnB,SAAU,WACVN,QAAS,eACTqB,OAAQ,OACRP,KAAM,EACNE,WAAYlB,EAAMN,QAAQG,UAAUD,UAKlCgC,EAAQ,CACZ,CACEC,OAAQ,gBACRC,KAAM,kBACNC,OAAQ,QAEV,CACEF,OAAQ,oBACRC,KAAM,aACNC,OAAQ,QAEV,CACEF,OAAQ,yBACRC,KAAM,kBACNC,OAAQ,QAEV,CACEF,OAAQ,mBACRC,KAAM,YACNC,OAAQ,QAEV,CACEF,OAAQ,qBACRC,KAAM,cACNC,OAAQ,SAkMGC,EA9LH,WACV,IADgBC,EAGaC,oBAAS,GAHtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAK,GAAAH,EAAA,GAAAA,EAAA,GAImBD,mBAAS,IAJ5BK,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAITE,EAJSD,EAAA,GAIEE,EAJFF,EAAA,GAAAG,EAKkBR,mBAAS,GAL3BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAKTE,EALSD,EAAA,GAKEE,EALFF,EAAA,GAAAG,EAMoBZ,oBAAS,GAN7Ba,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAOYb,oBAAS,IAPrBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAOTE,EAPSD,EAAA,GAODE,EAPCF,EAAA,GAAAG,EAQgBlB,oBAAS,GARzBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAQTE,EARSD,EAAA,GAAAE,GAAAF,EAAA,GASsBnB,mBAAS,IAT/BsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAUgBtB,mBAAS,IAVzBwB,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAWYxB,oBAAS,IAXrB0B,EAAAxB,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,GAWTE,EAXSD,EAAA,GAWDE,EAXCF,EAAA,GAcVG,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MAGrBE,EAAUpE,IASVqE,GAAYC,sBAAY,WAC5B,IAAIC,EAAM,EACNf,IACFe,EAAMC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM3C,EAAMG,SAAW,GAE/D,IAAM0C,GAAYjC,EAAY6B,GAAOzC,EAAMG,OAC3CU,EAAcgC,KAwBhBC,oBAAU,WACJX,EAASY,UACXZ,EAASY,QAAQC,aAAe,WAEbb,EAASY,QAAQE,YAAYC,QAAQ,GAAtD,IAFoCC,EAKFhB,EAASY,QAAnCK,EAL4BD,EAK5BC,SAAUH,EALkBE,EAKlBF,YAGlBhC,EAAa,SAACoC,GACZ,OAAiB,MAAbA,EAAyB,EACzBlB,EAASY,SACHE,EAAcG,EAAW,KAAKF,QAAQ,QADhD,QArEQ,IAAAI,GAmFStD,EAAMY,GAAvBV,GAnFQoD,GAmFRpD,KAnFQoD,GAmFFrD,OAEd,OACEsD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQjE,SACtBkF,EAAAC,EAAAC,cAACG,EAAA,EAAD,MAEAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWF,UAAWrB,EAAQ3D,WAC5B4E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQnD,UACtBoE,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWC,MAAM,SAAjB,kBAGJX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACGnE,EAAMoE,IAAI,SAACC,EAAOC,GACjB,OACEf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUO,IAAKF,EAAMnE,MACnBqD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,OAAOH,EAAQ,GAC/Cf,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWO,UAAU,MAClB5D,IAAc0D,GAASf,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAASmB,MAAM,UAAUC,SAAS,WAE5DrB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,UAC9BlB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAYC,QAAS,kBAAMjE,EAAcyD,KACvCf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,QAAQ,YAAYL,MAAM,WACnCN,EAAMnE,QAIbqD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAMlE,cAa5CoD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQ2C,WACtB1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQ4C,UACtB3B,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAAErG,MAAO,OAAQa,OAAQ,QAAUyF,IAAG,WAAAC,OAAanF,GAAb,QAAyBoF,IAAI,gBAEjF/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQiD,OACtBhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,aAAW,gBAAgB9B,UAAWrB,EAAQvD,OAAQ+F,QAhHtD,WACpB,IAAMjC,GAAYjC,EAAY,EAAIZ,EAAMG,QAAUH,EAAMG,OACxDU,EAAcgC,KA+GJU,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAcmB,MAAM,UAAUC,SAAS,WAEzCrB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKF,aAAW,OAAOd,MAAM,YAAYhB,UAAWrB,EAAQvD,OAAQ+F,QAnGxD,WAChBxD,EACFa,EAASY,QAAQ6C,QAEjBzD,EAASY,QAAQ8C,OAEnBtE,GAAWD,KA8FCA,EAA0DiC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAOmB,MAAM,UAAUC,SAAS,UAAjFrB,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CAAWmB,MAAM,UAAUC,SAAS,WAEjDrB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,aAAW,YAAY9B,UAAWrB,EAAQvD,OAAQ+F,QAASvC,IACrEgB,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAUmB,MAAM,UAAUC,SAAS,WAErCrB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,aAAW,SAAS9B,UAAWrB,EAAQvD,OAAQ+F,QAAS,kBAAM5C,GAAWD,KACjFA,EAAyDsB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAWmB,MAAM,UAAUC,SAAS,UAApFrB,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAUmB,MAAM,UAAUC,SAAS,aAIpDrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQ1C,cACtB2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,SACE0C,UAAQ,EACRC,IAAKjE,EAELkE,MAAOpE,EACPmD,IAAG,WAAAC,OAAanF,GAAb,WAGPqD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQ7C,YAAa2G,IAAK/D,EAAayC,QA7G1C,SAACwB,MA8GZ/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAWrB,EAAQvC,YAAaoF,MAAO,CAAErG,MAAK,GAAAuG,OAAKrE,EAAL,aC3Q/DuF,IAASC,OAAOjD,EAAAC,EAAAC,cAPhB,WACE,OACEF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAerI,MAAOA,GACpBmF,EAAAC,EAAAC,cAACiD,EAAD,QAIU,MAAiBC,SAASC,eAAe","file":"static/js/main.ef3c55a5.chunk.js","sourcesContent":["// 設定客製化顏色主體\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#fafafa',\r\n        },\r\n        secondary: {\r\n            main: `rgb(77, 190, 164)`,\r\n        }\r\n    },\r\n});","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\n// meterial-ui組件\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Typography,\r\n  ButtonBase,\r\n  Fab,\r\n  Paper,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n} from '@material-ui/core';\r\n\r\nimport Shuffle from '@material-ui/icons/Shuffle';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport SkipNext from '@material-ui/icons/SkipNext';\r\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOff from '@material-ui/icons/VolumeOff';\r\nimport Hearing from '@material-ui/icons/Hearing';\r\n\r\n// classNames組件\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: '100vh',\r\n    backgroundColor: 'rgb(229, 235, 242)',\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    width: '90%',\r\n    margin: '64px',\r\n    backgroundColor: 'rgba(106, 111,135, 0.9)',\r\n    opacity: 0.9,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  paperBox: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flex: 1,\r\n    left: 0,\r\n    top: 0,\r\n    flexDirection: 'column',\r\n    background: 'none',\r\n    borderRadius: 0,\r\n    overflowX: 'auto',\r\n  },\r\n  progressBar: {\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    position: 'relative',\r\n    height: 10,\r\n  },\r\n  porgressArea: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  progressNow: {\r\n    position: 'absolute',\r\n    display: 'inline-block',\r\n    height: '100%',\r\n    left: 0,\r\n    background: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\n// 歌曲集合\r\nconst songs = [\r\n  {\r\n    author: 'Author My Way',\r\n    name: 'For_We_Are_Many',\r\n    length: '3:53',\r\n  },\r\n  {\r\n    author: 'Author Jazz_Mango',\r\n    name: 'Jazz_Mango',\r\n    length: '2:12',\r\n  },\r\n  {\r\n    author: 'Author Song_of_Mirrors',\r\n    name: 'Song_of_Mirrors',\r\n    length: '6:13',\r\n  },\r\n  {\r\n    author: 'Author Ice_Cream',\r\n    name: 'Ice_Cream',\r\n    length: '2:03',\r\n  },\r\n  {\r\n    author: 'Author Dawn_of_Man',\r\n    name: 'Dawn_of_Man',\r\n    length: '2:06',\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  let isDrag = false;\r\n  // 變數宣告 - hooks\r\n  const [open, setStateOpen] = useState(true); // 彈窗是否開啟\r\n  const [songIndex, setStateIndex] = useState(0); // 當前歌曲\r\n  const [completed, setCompleted] = useState(0); // 進度條\r\n  const [isFavorite, setIsFavorite] = useState(false) // 設置我的最愛\r\n  const [isPlay, setIsPlay] = useState(true); // 設置啟動\r\n  const [isRandom, setIsRandom] = useState(false); // 設置隨機\r\n  const [currentTime, setCurrentTime] = useState(0); // 設置當前時間\r\n  const [leftTime, setLeftTime] = useState(0); // 設置以進行時間\r\n  const [isMute, setIsMute] = useState(false); // 靜音\r\n\r\n  // 找到DOM指定元素 - ref\r\n  const audioRef = useRef(null); //找到當前audio元素\r\n  const progressRef = useRef(null); // 找到當前進度條元素\r\n\r\n  // meterial-ui 的樣式變數\r\n  const classes = useStyles();\r\n\r\n  // 切換上一首歌\r\n  const clickPrevious = () => {\r\n    const newIndex = (songIndex - 1 + songs.length) % songs.length;\r\n    setStateIndex(newIndex);\r\n  }\r\n\r\n  // 切換下一首歌\r\n  const clickNext = useCallback(() => {\r\n    let add = 1;\r\n    if (isRandom) {\r\n      add = Math.floor(Math.random() * Math.floor(songs.length)) + 1;\r\n    }\r\n    const newIndex = (songIndex + add) % songs.length;\r\n    setStateIndex(newIndex);\r\n  });\r\n\r\n  // 暫停 ＆ 播放紐\r\n  const onClickIsPlay = () => {\r\n    if (isPlay) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlay(!isPlay)\r\n  }\r\n\r\n\r\n  // 手動調整時間條\r\n  const moveProgress = (event) => {\r\n    //   const fullWidth = progressRef.current.clientWidth;\r\n    //   const percent = ((event.clientX - 72) / fullWidth * 100).toFixed(2);\r\n    //   const { duration } = audioRef.current;\r\n    //   audioRef.current.currentTime = duration * percent / 100;\r\n    //   setCompleted(percent);\r\n  }\r\n\r\n  // 畫面重新render的時候執行\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.ontimeupdate = () => {\r\n        // 抓取下一秒的時間\r\n        const nextTime = audioRef.current.currentTime.toFixed(0) || null;\r\n\r\n        // 整首歌時間  + 歌曲當前的時間解構\r\n        const { duration, currentTime } = audioRef.current;\r\n\r\n        // 進度條隨時間前進\r\n        setCompleted((preState) => {\r\n          if (preState === 100) return 0;\r\n          if (audioRef.current) {\r\n            return (currentTime / duration * 100).toFixed(2);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // 關閉彈窗\r\n  function handleClose() {\r\n    setStateOpen(false);\r\n  }\r\n\r\n  // 解構歌曲\r\n  const { name, author } = songs[songIndex];\r\n\r\n  return (\r\n    <Box className={classes.rootBox}>\r\n      <CssBaseline />\r\n      {/*  列表  */}\r\n      <Container className={classes.container}>\r\n        <Box className={classes.paperBox}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell align=\"center\">標題</TableCell>\r\n                <TableCell align=\"right\">長度</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {songs.map((items, index) => {\r\n                return (\r\n                  <TableRow key={items.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                    <TableCell component=\"th\">\r\n                      {songIndex === index && <Hearing color=\"primary\" fontSize=\"small\" />}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"column\">\r\n                      <ButtonBase onClick={() => setStateIndex(index)}>\r\n                        <Typography variant=\"subtitle1\" color=\"primary\">\r\n                          {items.name}\r\n                        </Typography>\r\n                      </ButtonBase>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{items.length}</TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n\r\n        {/*  底部進度條 + 控制器  */}\r\n        {/* <div className={classes.title}>\r\n          <Typography variant=\"h5\" className={classNames(classes.font, classes.margin)}>{name}</Typography>\r\n          <Typography variant=\"subtitle1\" className={classNames(classes.font, classes.margin)} >{author}</Typography>\r\n        </div> */}\r\n        <Box className={classes.playerBar}>\r\n          <Box className={classes.coverDiv}>\r\n            <img style={{ width: '100%', height: '100%' }} src={`./cover/${name}.jpg`} alt=\"albumcover\" />\r\n          </Box>\r\n          <Box className={classes.tools}>\r\n            <IconButton aria-label=\"skip_previous\" className={classes.margin} onClick={clickPrevious}>\r\n              <SkipPrevious color=\"primary\" fontSize=\"small\" />\r\n            </IconButton>\r\n            <Fab aria-label=\"play\" color=\"secondary\" className={classes.margin} onClick={onClickIsPlay}>\r\n              {!isPlay ? <PlayArrow color=\"primary\" fontSize=\"large\" /> : <Pause color=\"primary\" fontSize=\"large\" />}\r\n            </Fab>\r\n            <IconButton aria-label=\"skip_next\" className={classes.margin} onClick={clickNext}>\r\n              <SkipNext color=\"primary\" fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton aria-label=\"volume\" className={classes.margin} onClick={() => setIsMute(!isMute)}>\r\n              {!isMute ? <VolumeUp color=\"primary\" fontSize=\"small\" /> : <VolumeOff color=\"primary\" fontSize=\"small\" />}\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.porgressArea}>\r\n          <Box>\r\n            <audio\r\n              autoPlay\r\n              ref={audioRef}\r\n              // muted={isMute}\r\n              muted={isMute}\r\n              src={`./music/${name}.mp3`}>\r\n            </audio>\r\n          </Box>\r\n          <Box className={classes.progressBar} ref={progressRef} onClick={moveProgress}>\r\n            <Box className={classes.progressNow} style={{ width: `${completed}%` }} />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n\r\n\r\n      {/* 以下為彈窗元件*/}\r\n      {/* <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">提醒</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            這只是參加六角學院的活動,並無任何商業用途\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            不同意\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\r\n            同意\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport theme from './styles';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction MusicPlayer() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  );\r\n}\r\nReactDOM.render(<MusicPlayer />, document.getElementById('root'));\r\n"],"sourceRoot":""}